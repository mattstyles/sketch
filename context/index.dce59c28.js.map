{"mappings":"AACA,SAASA,EAAcC,GACrB,GAAsB,oBAAXC,OACT,MAAM,IAAIC,MAAM,yBAElB,MAAMC,EAAMF,OAAOG,iBAGnB,OAFAJ,EAAKK,OAAOC,MAAQN,EAAKM,MACzBN,EAAKK,OAAOE,OAASP,EAAKO,OAM5B,SAAsBP,GACpB,MAAMK,EAASL,EAAKK,OACdC,EAAQD,EAAOC,MACfC,EAASF,EAAOE,OAKtB,OAJAF,EAAOC,MAAQA,EAAQN,EAAKG,IAC5BE,EAAOE,OAASA,EAASP,EAAKG,IAC9BE,EAAOG,MAAMF,MAAQA,EAAQ,KAC7BD,EAAOG,MAAMD,OAASA,EAAS,KACxBF,C,CAbAI,CAAa,CAClBJ,OAAQL,EAAKK,O,IACbF,G,CCRJ,SAASO,EAAOV,GACd,GAAsB,oBAAXC,QAA8C,oBAAbU,SAC1C,OAAO,KAET,MAAMN,GAAkB,MAARL,OAAe,EAASA,EAAKK,SAAWM,SAASC,cAAc,UACzET,EAAMF,OAAOG,iBACbS,EAAMR,EAAOS,WAAW,MAAe,MAARd,OAAe,EAASA,EAAKe,aAAe,IACjF,OAAW,MAAPF,EACK,MAETd,EAAc,C,OACZM,EACAC,MAAOO,EAAIR,OAAOC,MAClBC,OAAQM,EAAIR,OAAOE,SAErBM,EAAIG,MAAMb,EAAKA,GACRU,E,CChBT,IAAII,EAAW,EAEf,SAASC,EAAOL,GACdI,GAFS,IAIT,MAAME,EAAS,EAAIC,KAAKC,IAAIJ,GACtBK,EAAM,EAAyB,IAArBF,KAAKC,IAAIJ,GACnBM,EAAQJ,EAASC,KAAKI,GAAK,EACjCX,EAAIY,UAAU,EAAG,EAAGZ,EAAIR,OAAOC,MAAOO,EAAIR,OAAOE,QACjDM,EAAIa,YAAc,MAClBb,EAAIc,UAAY,EAChBd,EAAIe,YACJf,EAAIgB,IAAI,IAAK,IAAK,GAAIN,EAAOA,EAAQH,KAAKI,GAAKF,GAC/CT,EAAIiB,SAEJ7B,OAAO8B,uBAAsB,IAAMb,EAAOL,I,EAG5C,WACE,MAAMA,EAAMH,IACD,MAAPG,IAIJmB,QAAQC,IAAIpB,EAAIR,OAAOC,OAEvBK,SAASuB,KAAKC,YAAYtB,EAAIR,QAE9Ba,EAAOL,G,CAmBTuB,GAhBA,WACE,MAAM/B,EAASM,SAAS0B,cAAiC,cACzD,GAAc,MAAVhC,EACF,OAGF,MAAMQ,EAAMH,EAAO,CACjBL,OAAQA,IAEC,MAAPQ,GAIJK,EAAOL,E,CAITyB","sources":["packages/sketch-canvas-size/lib/index.mjs","packages/sketch-context/lib/index.mjs","apps/examples/pages/context/context.ts"],"sourcesContent":["// src/index.ts\nfunction setCanvasSize(opts) {\n  if (typeof window === \"undefined\") {\n    throw new Error(\"Can not access window\");\n  }\n  const dpr = window.devicePixelRatio;\n  opts.canvas.width = opts.width;\n  opts.canvas.height = opts.height;\n  return setCanvasDpr({\n    canvas: opts.canvas,\n    dpr\n  });\n}\nfunction setCanvasDpr(opts) {\n  const canvas = opts.canvas;\n  const width = canvas.width;\n  const height = canvas.height;\n  canvas.width = width * opts.dpr;\n  canvas.height = height * opts.dpr;\n  canvas.style.width = width + \"px\";\n  canvas.style.height = height + \"px\";\n  return canvas;\n}\nexport {\n  setCanvasDpr,\n  setCanvasSize\n};\n","// src/index.ts\nimport { setCanvasSize } from \"sketch-canvas-size\";\nfunction create(opts) {\n  if (typeof window === \"undefined\" || typeof document === \"undefined\") {\n    return null;\n  }\n  const canvas = (opts == null ? void 0 : opts.canvas) ?? document.createElement(\"canvas\");\n  const dpr = window.devicePixelRatio;\n  const ctx = canvas.getContext(\"2d\", (opts == null ? void 0 : opts.attributes) ?? {});\n  if (ctx == null) {\n    return null;\n  }\n  setCanvasSize({\n    canvas,\n    width: ctx.canvas.width,\n    height: ctx.canvas.height\n  });\n  ctx.scale(dpr, dpr);\n  return ctx;\n}\nexport {\n  create\n};\n","import {create} from 'sketch-context'\n\nlet rotation = 0\nlet rate = 0.02\nfunction render(ctx: CanvasRenderingContext2D) {\n  rotation = rotation + rate\n\n  const period = 1 + Math.sin(rotation)\n  const len = 1 + Math.sin(rotation) * 0.75\n  const angle = period * Math.PI * 2\n  ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n  ctx.strokeStyle = 'red'\n  ctx.lineWidth = 4\n  ctx.beginPath()\n  ctx.arc(100, 100, 20, angle, angle + Math.PI * len)\n  ctx.stroke()\n\n  window.requestAnimationFrame(() => render(ctx))\n}\n\nfunction renderWithNewCanvas() {\n  const ctx = create()\n  if (ctx == null) {\n    return\n  }\n\n  console.log(ctx.canvas.width)\n\n  document.body.appendChild(ctx.canvas)\n\n  render(ctx)\n}\n\nfunction renderWithExistingCanvas() {\n  const canvas = document.querySelector<HTMLCanvasElement>('.js-canvas')\n  if (canvas == null) {\n    return\n  }\n\n  const ctx = create({\n    canvas: canvas,\n  })\n  if (ctx == null) {\n    return\n  }\n\n  render(ctx)\n}\n\nrenderWithNewCanvas()\nrenderWithExistingCanvas()\n"],"names":["$7e6ea443c67680a4$export$e3aebd8246ac72dc","opts","window","Error","dpr","devicePixelRatio","canvas","width","height","style","$7e6ea443c67680a4$export$efd52609a467c022","$0fd96d774458c65a$export$185802fd694ee1f5","document","createElement","ctx","getContext","attributes","scale","$e565fc06279b799b$var$rotation","$e565fc06279b799b$var$render","period","Math","sin","len","angle","PI","clearRect","strokeStyle","lineWidth","beginPath","arc","stroke","requestAnimationFrame","console","log","body","appendChild","$e565fc06279b799b$var$renderWithNewCanvas","querySelector","$e565fc06279b799b$var$renderWithExistingCanvas"],"version":3,"file":"index.dce59c28.js.map"}
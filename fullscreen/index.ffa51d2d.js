function t(t){if("undefined"==typeof window)throw new Error("Can not access window");const e=window.devicePixelRatio;return t.canvas.width=t.width,t.canvas.height=t.height,function(t){const e=t.canvas,n=e.width,o=e.height;return e.width=n*t.dpr,e.height=o*t.dpr,e.style.width=n+"px",e.style.height=o+"px",e}({canvas:t.canvas,dpr:e})}function e(e){if("undefined"==typeof window||"undefined"==typeof document)throw new Error("Can not create canvas element");const n=document.createElement("canvas"),o=(null==e?void 0:e.width)??n.width,i=(null==e?void 0:e.height)??n.height;return n.style.userSelect="none",t({canvas:n,width:o,height:i}),n}function n(t){if("undefined"==typeof window||"undefined"==typeof document)throw new Error("Can not attach canvas");const n=(null==t?void 0:t.canvas)||e(),o=(null==t?void 0:t.container)||n.parentElement;if(null==o)throw new Error("Must supply a container to attach the canvas to if not already appended");return o.appendChild(n),o===document.body&&(n.style.display="block"),{canvas:n,container:o}}var o={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let i;const a=new Uint8Array(16);function s(){if(!i&&(i="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!i))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return i(a)}const c=[];for(let t=0;t<256;++t)c.push((t+256).toString(16).slice(1));function r(t,e=0){return(c[t[e+0]]+c[t[e+1]]+c[t[e+2]]+c[t[e+3]]+"-"+c[t[e+4]]+c[t[e+5]]+"-"+c[t[e+6]]+c[t[e+7]]+"-"+c[t[e+8]]+c[t[e+9]]+"-"+c[t[e+10]]+c[t[e+11]]+c[t[e+12]]+c[t[e+13]]+c[t[e+14]]+c[t[e+15]]).toLowerCase()}var d=function(t,e,n){if(o.randomUUID&&!e&&!t)return o.randomUUID();const i=(t=t||{}).random||(t.rng||s)();if(i[6]=15&i[6]|64,i[8]=63&i[8]|128,e){n=n||0;for(let t=0;t<16;++t)e[n+t]=i[t];return e}return r(i)};var h=class{constructor(t){this.canvas=t,this._events=new Map,this._disposers=new Set}on(t){const e=d();this._events.has(t.type)||this._events.set(t.type,new Map);const n=this._events.get(t.type);if(null==n)throw new Error(`Can not get event map for ${t.type}`);return n.set(e,t.action),()=>{n.delete(e)}}dispose(){for(let t of this._disposers)t()}};var u,l,p=(u=class extends h{constructor(e){super(e);const n=function(e){if("undefined"==typeof window||"undefined"==typeof document)return null;const n=(null==e?void 0:e.canvas)??document.createElement("canvas"),o=window.devicePixelRatio,i=n.getContext("2d",(null==e?void 0:e.attributes)??{});return null==i?null:(t({canvas:n,width:i.canvas.width,height:i.canvas.height}),i.scale(o,o),i)}({canvas:this.canvas});if(null==n)throw new Error("Erroring creating context");this.ctx=n}},(l=class extends u{constructor(...e){super(...e),this._events.set(l.mapKey,new Map);const n=new ResizeObserver((e=>{const n=this._events.get(l.mapKey);for(const o of e){const e=o.contentRect;if(t({canvas:this.canvas,width:e.width,height:e.height}),null!=n)for(let[t,o]of n)o({app:this,width:e.width,height:e.height});if(this._events.has("tick")){const t=this._events.get("tick");if(null!=t)for(let[e,n]of t)n({dt:0,app:this})}}})),o=this.canvas.parentElement;null!=o&&n.observe(o),this._disposers.add((()=>{n.disconnect()}))}}).mapKey="resize",l);const f=function(t){const{canvas:e}=n(t);return new p(e)}({container:document.body});f.on({type:"resize",action:function(){const t=f.ctx.createLinearGradient(0,.85*f.ctx.canvas.height,f.ctx.canvas.width,.25*f.ctx.canvas.height);t.addColorStop(0,"#00dbde"),t.addColorStop(1,"#fc00ff"),f.ctx.fillStyle=t,f.ctx.fillRect(0,0,f.ctx.canvas.width,f.ctx.canvas.height);for(let t=0;t<=8;t++){const e=.25*Math.min(f.canvas.width,f.canvas.height);f.ctx.beginPath(),f.ctx.strokeStyle=`rgba(255, 250, 248, ${1-t/9})`,f.ctx.lineWidth=4+4*(1-t/8),f.ctx.arc(.5*f.canvas.width,.5*f.canvas.height,e-t*(.05*e),0,2*Math.PI),f.ctx.stroke()}}});
//# sourceMappingURL=index.ffa51d2d.js.map
